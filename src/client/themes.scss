@import '@material/theme/color-palette';

$black-color: #000;
$white-color: #FFF;

// all theme maps are keyed by the background color

$background-color-light: darken($white-color, 10);
$background-color-dark: darken($black-color, 16);

$background-colors: (
  light: (
    primary: $background-color-light,
    secondary: darken($white-color, 15),
    faded: rgba($background-color-light, .95)
  ),
  dark: (
    primary: $background-color-dark,
    secondary: lighten($black-color, 20),
    faded: rgba($background-color-dark, .95)
  )
);

$foreground-colors: (
  light: (
    primary: rgba($black-color, .87),
    secondary: rgba($black-color, .54),
    hint: rgba($black-color, .38),
    disabled: rgba($black-color, .38),
    icon: rgba($black-color, .38)
  ),
  dark: (
    primary: rgba($white-color, .8),
    secondary: rgba($white-color, .5),
    hint: rgba($white-color, .3),
    disabled: rgba($white-color, .3),
    icon: rgba($white-color, .3)
  )
);

$theme-colors: (
  light: (
    primary: #6D4C41,
    primary-light: #9C786C,
    primary-dark: #40241A,
    secondary: #64B5F6,
    secondary-light: #9BE7FF,
    secondary-dark: #2286C3
  ),
  dark: (
    primary: #4FC2F7,
    primary-light: #8BF5FF,
    primary-dark: #0092C4,
    secondary: #FF4081,
    secondary-light: #FF79B0,
    secondary-dark: #C60055
  )
);

$theme-foreground-types: (
  light: (
    primary: dark,
    primary-light: light,
    primary-dark: dark,
    secondary: light,
    secondary-light: light,
    secondary-dark: light
  ),
  dark: (
    primary: light,
    primary-light: light,
    primary-dark: light,
    secondary: light,
    secondary-light: light,
    secondary-dark: dark
  )
);

$theme-colors-light: map-get($theme-colors, light);
$theme-colors-dark: map-get($theme-colors, dark);

$foreground-colors-light: map-get($foreground-colors, light);
$foreground-colors-dark: map-get($foreground-colors, dark);

$border-colors: (
  light: (
    normal: rgba(map-get($foreground-colors-dark, primary), .5),
    strong: rgba(map-get($foreground-colors-dark, secondary), .3),
  ),
  dark: (
    normal: rgba(map-get($foreground-colors-light, primary), .5),
    strong: rgba(map-get($foreground-colors-light, secondary), .3),
  )
);

$border-colors-light: map-get($border-colors, light);
$border-colors-dark: map-get($border-colors, dark);

$foreground-status-colors: (
  light: (
    success: $material-color-green-600,
    warning: $material-color-yellow-600,
    error: $material-color-red-600
  ),
  dark: (
    success: $material-color-green-600,
    warning: $material-color-yellow-600,
    error: $material-color-red-600
  )
);

$foreground-status-colors-light: map-get($foreground-status-colors, light);
$foreground-status-colors-dark: map-get($foreground-status-colors, dark);

$background-colors-light: map-get($background-colors, light);
$background-colors-dark: map-get($background-colors, dark);

@function get-foreground-color-for-theme($theme, $text-style, $background) {
  $foreground-types: map-get($theme-foreground-types, $background);
  $foreground-type: map-get($foreground-types, $theme);
  $colors: map-get($foreground-colors, $foreground-type);
  @return map-get($colors, $text-style);
}

@mixin create-theme($background) {
  $theme-for-background: map-get($theme-colors, $background);
  @each $theme in map-keys($theme-for-background) {
    --mdc-theme-#{$theme}: #{map-get($theme-for-background, $theme)};
  }

  $foreground-for-background: map-get($foreground-colors, $background);
  @each $style in map-keys($foreground-for-background) {
    --foreground-color-#{$style}: #{map-get($foreground-for-background, $style)};
    --mdc-theme-text-#{$style}-on-background: #{map-get($foreground-for-background, $style)};

    @each $theme in map-keys($theme-for-background) {
      --mdc-theme-text-#{$style}-on-#{$theme}: #{get-foreground-color-for-theme($theme, $style, $background)}
    }
  }

  // these are only for mdc components (mdc background is always set to light)
  @each $style in map-keys($foreground-for-background) {
    --mdc-theme-text-#{$style}-on-light: #{map-get($foreground-for-background, $style)};
  }

  $border-for-background: map-get($border-colors, $background);
  @each $border in map-keys($border-for-background) {
    --border-color-#{$border}: #{map-get($border-for-background, $border)};
  }

  $status-for-background: map-get($foreground-status-colors, $background);
  @each $color in map-keys($status-for-background) {
    --status-color-#{$color}: #{map-get($status-for-background, $color)};
  }

  $colors-for-background: map-get($background-colors, $background);
  --background-color: map-get($colors-for-background, primary);
  --background-color-primary: map-get($colors-for-background, primary);
  --background-color-secondary: map-get($colors-for-background, secondary);
  --background-color-faded: map-get($colors-for-background, faded);
}

body {
  --light-background: map-get($background-colors-light, primary);
  --dark-background: map-get($background-colors-dark, primary);

  // use light as the default theme
  @include create-theme(light);

  &.light-theme {
    @include create-theme(light);
  }

  &.dark-theme {
    @include create-theme(dark);
  }
}

@each $theme in map-keys($theme-colors-light) {
  .#{$theme}-theme-bg {
    background-color: var(--mdc-theme-#{$theme});
  }
}

@each $style in map-keys($background-colors-light) {
  .background-color-#{$style}-bg {
    background-color: var(--background-color-#{$style});
  }
}

@each $style in map-keys($foreground-colors-light) {
  .foreground-color-#{$style}-fg {
    color: var(--foreground-color-#{$style});
  }
}

@each $color in map-keys($foreground-status-colors-light) {
  .mdc-theme--status-color-#{$color},
  .status-color-#{$color}-fg {
    color: var(--status-color-#{$color});
  }
}

.light-theme-bg {
  background-color: map-get($background-colors-light, primary);
}

.dark-theme-bg {
  background-color: map-get($background-colors-dark, primary);
}
