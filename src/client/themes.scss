@import '@material/theme/color-palette';
@import './colors';

$background-colors: (
  light: (
  primary: darken(#FFF, 10),
  secondary: darken(#FFF, 15)
),
  dark: (
    primary: lighten(#000, 16),
    secondary: lighten(#000, 20),
  )
);

$foreground-colors: (
  // for light background
  dark: (
    primary: rgba(black, .87),
    secondary: rgba(black, .54),
    hint: rgba(black, .38),
    disabled: rgba(black, .38),
    icon: rgba(black, .38)
  ),
  // for dark background
  light: (
    primary: rgba(white, .8),
    secondary: rgba(white, .5),
    hint: rgba(white, .3),
    disabled: rgba(white, .3),
    icon: rgba(white, .3)
  )
);

$theme-colors: (
  light: (
    primary: #6D4C41,
    primary-light: #9C786C,
    primary-dark: #40241A,
    secondary: #64B5F6,
    secondary-light: #9BE7FF,
    secondary-dark: #2286C3
  ),
  dark: (
    primary: #4FC2F7,
    primary-light: #8BF5FF,
    primary-dark: #0092C4,
    secondary: #FF4081,
    secondary-light: #FF79B0,
    secondary-dark: #C60055
  )
);

$theme-foreground-types: (
  light: (
    primary: light,
    primary-light: dark,
    primary-dark: light,
    secondary: dark,
    secondary-light: dark,
    secondary-dark: dark
  ),
  dark: (
    primary: dark,
    primary-light: dark,
    primary-dark: light,
    secondary: dark,
    secondary-light: dark,
    secondary-dark: dark
  )
);

$theme-colors-light: map-get($theme-colors, light);
$theme-colors-dark: map-get($theme-colors, dark);

$foreground-colors-light: map-get($foreground-colors, light);
$foreground-colors-dark: map-get($foreground-colors, dark);

// for light background
$border-colors-dark: (
  normal: rgba(map-get($foreground-colors-dark, primary), .5),
  strong: rgba(map-get($foreground-colors-dark, secondary), .3),
);

// for dark background
$border-colors-light: (
  normal: rgba(map-get($foreground-colors-light, primary), .5),
  strong: rgba(map-get($foreground-colors-light, secondary), .3),
);

$background-colors-light: map-get($background-colors, light);
$background-colors-dark: map-get($background-colors, dark);
$background-color-light-primary: map-get($background-colors-light, primary);
$background-color-light-secondary: map-get($background-colors-light, secondary);
$background-color-light-faded: rgba($background-color-light-primary, .95);
$background-color-dark-primary: map-get($background-colors-dark, primary);
$background-color-dark-secondary: map-get($background-colors-dark, secondary);
$background-color-dark-faded: rgba($background-color-dark-primary, .95);

@function get-foreground-color-for-theme($theme, $text-style, $background) {
  $foreground-types: map-get($theme-foreground-types, $background);
  $foreground-type: map-get($foreground-types, $theme);
  $colors: map-get($foreground-colors, $foreground-type);
  @return map-get($colors, $text-style);
}

@mixin create-theme($theme-colors, $foreground-colors, $border-colors, $background-primary, $background-secondary, $background-faded, $background) {
  @each $theme in map-keys($theme-colors) {
    --mdc-theme-#{$theme}: #{map-get($theme-colors, $theme)};
  }
  @each $border in map-keys($border-colors) {
    --border-color-#{$border}: #{map-get($border-colors, $border)};
  }
  @each $style in map-keys($foreground-colors) {
    --foreground-color-#{$style}: #{map-get($foreground-colors, $style)};
    --mdc-theme-text-#{$style}-on-background: #{map-get($foreground-colors, $style)};

    @each $theme in map-keys($theme-colors) {
      --mdc-theme-text-#{$style}-on-#{$theme}: #{get-foreground-color-for-theme($theme, $style, $background)}
    }
  }

  --background-color: $background-primary;
  --background-color-secondary: $background-secondary;
  --background-color-faded: $background-faded;
}

body {
  --light-background: $background-color-light-primary;
  --dark-background: $background-color-dark-primary;

  @each $style in map-keys($foreground-colors-light) {
    --mdc-theme-text-#{$style}-on-dark: #{map-get($foreground-colors-light, $style)};
  }

  @each $style in map-keys($foreground-colors-dark) {
    --mdc-theme-text-#{$style}-on-light: #{map-get($foreground-colors-dark, $style)};
  }

  // set default theme to light
  @include create-theme($theme-colors-light,
                        $foreground-colors-dark,
                        $border-colors-light,
                        $background-color-light-primary,
                        $background-color-light-secondary,
                        $background-color-light-faded,
                        light);

  &.light-theme {
    @include create-theme($theme-colors-light,
                          $foreground-colors-dark,
                          $border-colors-light,
                          $background-color-light-primary,
                          $background-color-light-secondary,
                          $background-color-light-faded,
                          light);
  }

  &.dark-theme {
    @include create-theme($theme-colors-dark,
                          $foreground-colors-light,
                          $border-colors-dark,
                          $background-color-dark-primary,
                          $background-color-dark-secondary,
                          $background-color-dark-faded,
                          dark);
  }
}

.dark-theme-bg {
  background-color: $background-color-dark-primary;
}

.light-theme-bg {
  background-color: $background-color-light-primary;
}

@each $theme in map-keys($theme-colors-light) {
  .#{$theme}-theme-bg {
    background-color: var(--mdc-theme-#{$theme});
  }
}
