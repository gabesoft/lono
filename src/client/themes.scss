@import '@material/theme/color-palette';

$black-color: #000;
$white-color: #FFF;

$background-color-light: #F5F5F5;
$background-color-light-secondary: #E0E0E0;

$background-color-dark: #303030;
$background-color-dark-secondary: #424242;

$background-colors: (
  light: (
    primary: $background-color-light,
    secondary: $background-color-light-secondary,
    faded: rgba($background-color-light-secondary, .95)
  ),
  dark: (
    primary: $background-color-dark,
    secondary: $background-color-dark-secondary,
    faded: rgba($background-color-dark-secondary, .95)
  )
);

$foreground-colors: (
  light: (
    primary: rgba($black-color, .85),
    secondary: rgba($black-color, .54),
    hint: rgba($black-color, .38),
    disabled: rgba($black-color, .38),
    icon: rgba($black-color, .38)
  ),
  dark: (
    primary: rgba($white-color, .7),
    secondary: rgba($white-color, .4),
    hint: rgba($white-color, .2),
    disabled: rgba($white-color, .2),
    icon: rgba($white-color, .2)
  )
);

$theme-colors: (
  light: (
    primary: #795548,
    primary-light: #A98274,
    primary-dark: #4B2C20,
    secondary: #00B0FF,
    secondary-light: #69E2FF,
    secondary-dark: #0081CB
  ),
  dark: (
    primary: #00838F,
    primary-light: #4FB3BE,
    primary-dark: #005661,
    secondary: #FF9100,
    secondary-light: #FFC246,
    secondary-dark: #C56200
  )
);

$theme-foreground-colors: (
  light: (
  primary: rgba($black-color, .87),
  secondary: rgba($black-color, .54),
  hint: rgba($black-color, .38),
  disabled: rgba($black-color, .38),
  icon: rgba($black-color, .38)
),
  dark: (
    primary: rgba($white-color, 1),
    secondary: rgba($white-color, .7),
    hint: rgba($white-color, .5),
    disabled: rgba($white-color, .5),
    icon: rgba($white-color, .5)
  )
);

$theme-foreground-types: (
  light: (
    primary: dark,
    primary-light: light,
    primary-dark: dark,
    secondary: light,
    secondary-light: light,
    secondary-dark: light
  ),
  dark: (
    primary: light,
    primary-light: light,
    primary-dark: dark,
    secondary: light,
    secondary-light: light,
    secondary-dark: light
  )
);

$image-opacities: (
  light: 1,
  dark: 0.7
);

$theme-colors-light: map-get($theme-colors, light);
$theme-colors-dark: map-get($theme-colors, dark);

$foreground-colors-light: map-get($foreground-colors, light);
$foreground-colors-dark: map-get($foreground-colors, dark);

$border-colors: (
  light: (
    normal: rgba(map-get($foreground-colors-light, primary), .1),
    strong: rgba(map-get($foreground-colors-light, secondary), .2),
  ),
  dark: (
    normal: rgba(map-get($foreground-colors-dark, primary), .1),
    strong: rgba(map-get($foreground-colors-dark, secondary), .2),
  )
);

$border-colors-light: map-get($border-colors, light);
$border-colors-dark: map-get($border-colors, dark);

$foreground-status-colors: (
  light: (
    success: $material-color-green-600,
    warning: $material-color-yellow-700,
    error: $material-color-red-600
  ),
  dark: (
    success: $material-color-green-600,
    warning: $material-color-yellow-600,
    error: $material-color-red-600
  )
);

$theme-primary-off: (
  light: primary-dark,
  dark: primary-light
);

$foreground-status-colors-light: map-get($foreground-status-colors, light);
$foreground-status-colors-dark: map-get($foreground-status-colors, dark);

$background-colors-light: map-get($background-colors, light);
$background-colors-dark: map-get($background-colors, dark);

$selection-colors: (
  light: (
    background: map-get($background-colors-dark, primary),
    foreground: map-get($foreground-colors-dark, primary)
    ),
  dark: (
    background: map-get($background-colors-light, primary),
    foreground: map-get($foreground-colors-light, primary)
  )
);

@function get-foreground-color-for-theme($theme, $text-style, $background) {
  $foreground-types: map-get($theme-foreground-types, $background);
  $foreground-type: map-get($foreground-types, $theme);
  $colors: map-get($theme-foreground-colors, $foreground-type);
  @return map-get($colors, $text-style);
}

@function reverse-background($background) {
  @return if($background == dark, light, dark);
}

@mixin create-theme($background) {
  $theme-off: map-get($theme-primary-off, $background);
  $theme-for-background: map-get($theme-colors, $background);
  --mdc-theme-primary-off: #{map-get($theme-for-background, $theme-off)};
  @each $theme in map-keys($theme-for-background) {
    --mdc-theme-#{$theme}: #{map-get($theme-for-background, $theme)};
  }

  $foreground-for-background: map-get($foreground-colors, $background);
  @each $style in map-keys($foreground-for-background) {
    --foreground-color-#{$style}: #{map-get($foreground-for-background, $style)};
    --mdc-theme-text-#{$style}-on-background: #{map-get($foreground-for-background, $style)};
    --mdc-theme-text-#{$style}-on-primary-off: #{get-foreground-color-for-theme($theme-off, $style, $background)};

    @each $theme in map-keys($theme-for-background) {
      --mdc-theme-text-#{$style}-on-#{$theme}: #{get-foreground-color-for-theme($theme, $style, $background)}
    }
  }

  @each $style in map-keys($foreground-for-background) {
    --mdc-theme-text-#{$style}-on-light: #{map-get($foreground-for-background, $style)};
  }

  $foreground-for-reverse-background: map-get($foreground-colors, reverse-background($background));
  @each $style in map-keys($foreground-for-reverse-background) {
    --mdc-theme-text-#{$style}-on-dark: #{map-get($foreground-for-reverse-background, $style)};
  }

  $border-for-background: map-get($border-colors, $background);
  @each $border in map-keys($border-for-background) {
    --border-color-#{$border}: #{map-get($border-for-background, $border)};
  }

  $status-for-background: map-get($foreground-status-colors, $background);
  @each $color in map-keys($status-for-background) {
    --status-color-#{$color}: #{map-get($status-for-background, $color)};
  }

  $selection-for-background: map-get($selection-colors, $background);
  @each $property in map-keys($selection-for-background) {
    --selection-color-#{$property}: #{map-get($selection-for-background, $property)};
  }

  $colors-for-background: map-get($background-colors, $background);
  --background-color: map-get($colors-for-background, primary);
  --background-color-primary: map-get($colors-for-background, primary);
  --background-color-secondary: map-get($colors-for-background, secondary);
  --background-color-faded: map-get($colors-for-background, faded);

  --image-opacity: map-get($image-opacities, $background);
}

body {
  --light-background: map-get($background-colors-light, primary);
  --dark-background: map-get($background-colors-dark, primary);

  @include create-theme(light);

  &.light-theme {
    @include create-theme(light);
  }

  &.dark-theme {
    @include create-theme(dark);
  }
}

@each $theme in map-keys($theme-colors-light) {
  .#{$theme}-theme-bg {
    background-color: var(--mdc-theme-#{$theme});
  }
}

@each $style in map-keys($background-colors-light) {
  .background-color-#{$style}-bg {
    background-color: var(--background-color-#{$style});
  }
}

@each $style in map-keys($foreground-colors-light) {
  .foreground-color-#{$style}-fg {
    color: var(--foreground-color-#{$style});
  }
}

@each $border in map-keys($border-colors-light) {
  .border-#{$border} {
    border: 1px solid var(--border-color-#{$border});
  }
}

@each $color in map-keys($foreground-status-colors-light) {
  .mdc-theme--status-color-#{$color},
  .status-color-#{$color}-fg {
    color: var(--status-color-#{$color});
  }
}

.light-theme-bg {
  background-color: map-get($background-colors-light, primary);
}

.dark-theme-bg {
  background-color: map-get($background-colors-dark, primary);
}
